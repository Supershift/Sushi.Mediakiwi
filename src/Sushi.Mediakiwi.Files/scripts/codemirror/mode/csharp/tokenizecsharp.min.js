var tokenizeCSharp=function(){function n(n,t){for(var i=!1,r;!n.endOfLine();){if(r=n.next(),r==t&&!i)return!1;i=!i&&r=="\\"}return i}function r(n,t){function i(i,u){var o=n,f=e(n,t,i,function(n){o=n}),s=f.type=="operator"||f.type=="keyword c"||f.type.match(/^[\[{}\(,;:]$/);return(s!=t||o!=n)&&u(r(o,s)),f}return i.doNotIndent=n=='@"',i}function e(r,e,o,s){function p(){return o.next(),o.nextWhileMatches(u),{type:"number",style:"csharp-atom"}}function w(){return o.nextWhileMatches(/[0-9]/),o.equals(".")&&(o.next(),o.nextWhileMatches(/[0-9]/)),(o.equals("e")||o.equals("E"))&&(o.next(),o.equals("-")&&o.next(),o.nextWhileMatches(/[0-9]/)),{type:"number",style:"csharp-atom"}}function c(){o.nextWhileMatches(f);var n=o.get(),i=t.hasOwnProperty(n)&&t.propertyIsEnumerable(n)&&t[n];return i?{type:i.type,style:i.style,content:n}:{type:"variable",style:"csharp-variable",content:n}}function b(){return n(o,"/"),o.nextWhileMatches(/[gi]/),{type:"regexp",style:"csharp-string"}}function l(n){for(var i="/*",r=n=="*",t;;){if(o.endOfLine())break;if(t=o.next(),t=="/"&&r){i=null;break}r=t=="*"}return s(i),{type:"comment",style:"csharp-comment"}}function a(){return o.nextWhileMatches(i),{type:"operator",style:"csharp-operator"}}function v(t){var i=n(o,t);return s(i?t:null),{type:"string",style:"csharp-string"}}function y(n){for(var t='@"',i=n=='"',r;;){if(i)if(o.peek()=='"')o.next();else{t=null;break}if(o.endOfLine())break;r=o.next();i=r=='"'}return s(t),{type:"string",style:"csharp-string"}}if(r=='"'||r=="'")return v(r);var h=o.next();return r=="/*"?l(h):r=='@"'?y(h):h=='"'||h=="'"?v(h):/[\[\]{}\(\),;\:\.]/.test(h)?{type:h,style:"csharp-punctuation"}:h=="0"&&(o.equals("x")||o.equals("X"))?p():/[0-9]/.test(h)?w():h=="/"?o.equals("*")?(o.next(),l(h)):o.equals("/")?(n(o,null),{type:"comment",style:"csharp-comment"}):e?b():a():h=="#"?(n(o,null),{type:"comment",style:"csharp-comment"}):h=="@"?o.equals('"')?(o.next(),y(h)):c():i.test(h)?a():c()}var t=function(){function t(n,t){return{type:n,style:"csharp-"+t}}var u=t("keyword a","keyword"),r=t("keyword b","keyword"),i=t("keyword c","keyword"),f=t("operator","keyword"),e=t("atom","atom"),n=t("keyword d","keyword");return{"if":u,"while":u,"with":u,"else":r,"do":r,"try":r,"finally":r,"return":i,"break":i,"continue":i,"new":i,"delete":i,"throw":i,"in":f,"typeof":f,"instanceof":f,"var":t("var","keyword"),"function":t("function","keyword"),"catch":t("catch","keyword"),"for":t("for","keyword"),"switch":t("switch","keyword"),"case":t("case","keyword"),"default":t("default","keyword"),"true":e,"false":e,"null":e,"class":t("class","keyword"),namespace:t("class","keyword"),public:n,private:n,protected:n,internal:n,extern:n,override:n,virtual:n,abstract:n,static:n,out:n,ref:n,"const":n,foreach:t("for","keyword"),using:i,int:n,double:n,long:n,bool:n,char:n,"void":n,string:n,byte:n,sbyte:n,decimal:n,float:n,uint:n,ulong:n,object:n,short:n,ushort:n,get:n,set:n,value:n}}(),i=/[+\-*&%=<>!?|]/,u=/[0-9A-Fa-f]/,f=/[\w\$_]/;return function(n,t){return tokenizer(n,t||r(!1,!0))}}();
/*
//# sourceMappingURL=tokenizecsharp.min.js.map
*/